CREATE TABLE IF NOT EXISTS "migrations" ("id" integer not null primary key autoincrement, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "users" ("id" integer not null primary key autoincrement, "username" varchar not null, "phone_number" varchar, "email" varchar not null, "is_on_line" tinyint(1) not null default '0', "otp_token" varchar, "email_verified_at" datetime, "phone_verified_at" datetime, "password" varchar not null, "points" integer, "remember_token" varchar, "created_at" datetime, "updated_at" datetime, "user_index_status" varchar);
CREATE UNIQUE INDEX "users_username_unique" on "users" ("username");
CREATE UNIQUE INDEX "users_phone_number_unique" on "users" ("phone_number");
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE UNIQUE INDEX "users_otp_token_unique" on "users" ("otp_token");
CREATE TABLE IF NOT EXISTS "password_resets" ("email" varchar not null, "token" varchar not null, "created_at" datetime);
CREATE INDEX "password_resets_email_index" on "password_resets" ("email");
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer not null primary key autoincrement, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime default CURRENT_TIMESTAMP not null);
CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer not null primary key autoincrement, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE TABLE IF NOT EXISTS "profiles" ("id" integer not null primary key autoincrement, "user_id" integer not null, "first_name" varchar not null, "last_name" varchar not null, "gender" varchar check ("gender" in ('male', 'female')), "date_of_birth" date, "state" varchar, "avatar" varchar, "account_name" varchar, "bank_name" varchar, "account_number" varchar, "referral_code" varchar not null, "referrer" varchar, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "wallets" ("id" integer not null primary key autoincrement, "user_id" integer not null, "balance" numeric not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "wallet_transactions" ("id" integer not null primary key autoincrement, "wallet_id" integer not null, "transaction_type" varchar check ("transaction_type" in ('CREDIT', 'DEBIT')) not null, "amount" numeric not null, "balance" numeric not null default '0', "description" varchar, "reference" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("wallet_id") references "wallets"("id") on delete cascade);
CREATE UNIQUE INDEX "wallet_transactions_reference_unique" on "wallet_transactions" ("reference");
CREATE TABLE IF NOT EXISTS "categories" ("id" integer not null primary key autoincrement, "name" varchar not null, "description" varchar not null, "primary_color" varchar, "icon_name" varchar, "game_background_url" varchar, "category_id" integer, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "game_types" ("id" integer not null primary key autoincrement, "name" varchar not null, "description" varchar not null, "instruction" varchar, "category_id" integer, "created_at" datetime, "updated_at" datetime, "icon" varchar, "primary_color_1" varchar, "primary_color_2" varchar, foreign key("category_id") references "categories"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "boosts" ("id" integer not null primary key autoincrement, "name" varchar not null, "description" varchar not null, "point_value" integer not null, "pack_count" integer not null, "currency_value" numeric not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "user_points" ("id" integer not null primary key autoincrement, "user_id" integer not null, "game_type_id" integer, "value" integer not null, "description" varchar not null, "point_flow_type" varchar check ("point_flow_type" in ('POINTS_ADDED', 'POINTS_SUBTRACTED')) not null, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade, foreign key("game_type_id") references "game_types"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "user_boosts" ("id" integer not null primary key autoincrement, "user_id" integer not null, "boost_id" integer not null, "boost_count" integer not null, "used_count" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade, foreign key("boost_id") references "boosts"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "modes" ("id" integer not null primary key autoincrement, "name" varchar not null, "description" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "game_sessions" ("id" integer not null primary key autoincrement, "mode_id" integer not null, "game_type_id" integer not null, "category_id" integer not null, "user_id" integer not null, "challenge_id" integer, "opponent_id" integer, "start_time" datetime, "end_time" datetime, "session_token" varchar not null, "state" varchar check ("state" in ('PENDING', 'ONGOING', 'PAUSED', 'COMPLETED')) not null, "user_correct_count" integer default '0', "opponent_correct_count" integer default '0', "user_wrong_count" integer default '0', "opponent_wrong_count" integer default '0', "total_user_count" integer default '0', "total_opponent_count" integer default '0', "user_points_gained" integer default '0', "opponent_points_gained" integer default '0', "created_at" datetime, "updated_at" datetime, "user_won" tinyint(1), "opponent_won" tinyint(1), foreign key("mode_id") references "modes"("id") on delete cascade, foreign key("game_type_id") references "game_types"("id") on delete cascade, foreign key("category_id") references "categories"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade, foreign key("challenge_id") references "challenges"("id") on delete cascade, foreign key("opponent_id") references "users"("id") on delete cascade);
CREATE UNIQUE INDEX "game_sessions_session_token_unique" on "game_sessions" ("session_token");
CREATE INDEX "game_sessions_user_points_gained_index" on "game_sessions" ("user_points_gained");
CREATE INDEX "game_sessions_opponent_points_gained_index" on "game_sessions" ("opponent_points_gained");
CREATE TABLE IF NOT EXISTS "withdrawals" ("id" integer not null primary key autoincrement, "user_id" integer not null, "bank_name" varchar not null, "account_name" varchar not null, "account_number" varchar not null, "amount" numeric not null default '0', "status" varchar check ("status" in ('REQUEST_RECIEVED', 'REQUEST_PROCESSING', 'USER_PAID')) not null, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "user_quizzes" ("id" integer not null primary key autoincrement, "user_id" integer not null, "category_id" integer not null, "title" varchar not null, "description" varchar not null, "avatar" varchar, "is_public" tinyint(1) not null default '0', "life_span" date, "quiz_code" varchar, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade, foreign key("category_id") references "categories"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "questions" ("id" integer not null primary key autoincrement, "label" varchar not null, "level" varchar check ("level" in ('easy', 'medium', 'hard')) not null, "user_quiz_id" integer, "game_type_id" integer not null, "category_id" integer not null, "created_at" datetime, "updated_at" datetime, "challenge_id" integer, foreign key("user_quiz_id") references "user_quizzes"("id") on delete cascade, foreign key("game_type_id") references "game_types"("id") on delete cascade, foreign key("category_id") references "categories"("id") on delete cascade);
CREATE INDEX "questions_level_index" on "questions" ("level");
CREATE TABLE IF NOT EXISTS "options" ("id" integer not null primary key autoincrement, "question_id" integer not null, "title" varchar not null, "is_correct" tinyint(1) not null, "created_at" datetime, "updated_at" datetime, foreign key("question_id") references "questions"("id") on delete cascade);
CREATE INDEX "options_is_correct_index" on "options" ("is_correct");
CREATE TABLE IF NOT EXISTS "achievements" ("id" integer not null primary key autoincrement, "title" varchar not null, "point_milestone" varchar not null, "medal" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "user_achievements" ("id" integer not null primary key autoincrement, "user_id" integer not null, "achievement_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade, foreign key("achievement_id") references "achievements"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "game_session_questions" ("id" integer not null primary key autoincrement, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "notifications" ("id" integer not null primary key autoincrement, "created_at" datetime, "updated_at" datetime, "user_id" integer, "title" varchar, "message" varchar, "is_read" tinyint(1) default '0');
CREATE TABLE challenges (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, user_id INTEGER NOT NULL, opponent_id INTEGER NOT NULL, category_id INTEGER NOT NULL, game_type_id INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, "status" varchar check ("status" in ('PENDING', 'ACCEPTED', 'DECLINED')), "game_session_id" integer);
CREATE TABLE IF NOT EXISTS "category_rankings" ("id" integer not null primary key autoincrement, "user_id" integer not null, "category_id" integer not null, "points_gained" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade, foreign key("category_id") references "categories"("id") on delete cascade);
CREATE TABLE online_timelines (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, user_id INTEGER NOT NULL, referrer VARCHAR(191) DEFAULT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL);
INSERT INTO migrations VALUES(69,'2014_10_12_000000_create_users_table',1);
INSERT INTO migrations VALUES(70,'2014_10_12_100000_create_password_resets_table',1);
INSERT INTO migrations VALUES(71,'2019_08_19_000000_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(72,'2019_12_14_000001_create_personal_access_tokens_table',1);
INSERT INTO migrations VALUES(73,'2021_07_07_110350_create_profiles_table',1);
INSERT INTO migrations VALUES(74,'2021_07_07_130558_create_wallets_table',1);
INSERT INTO migrations VALUES(75,'2021_07_07_135129_create_wallet_transactions_table',1);
INSERT INTO migrations VALUES(76,'2021_07_20_183339_create_categories_table',1);
INSERT INTO migrations VALUES(77,'2021_07_20_185357_create_game_types_table',1);
INSERT INTO migrations VALUES(78,'2021_07_22_114432_create_boosts_table',1);
INSERT INTO migrations VALUES(79,'2021_07_22_123125_create_user_points_table',1);
INSERT INTO migrations VALUES(80,'2021_07_22_165027_create_user_boosts_table',1);
INSERT INTO migrations VALUES(81,'2021_07_22_170723_create_modes_table',1);
INSERT INTO migrations VALUES(82,'2021_07_22_172050_create_challenges_table',1);
INSERT INTO migrations VALUES(83,'2021_07_22_183015_create_game_sessions_table',1);
INSERT INTO migrations VALUES(84,'2021_07_28_132759_create_withdrawals_table',1);
INSERT INTO migrations VALUES(85,'2021_08_02_110128_create_user_quizzes_table',1);
INSERT INTO migrations VALUES(86,'2021_08_02_123529_create_questions_table',1);
INSERT INTO migrations VALUES(87,'2021_08_02_130723_create_options_table',1);
INSERT INTO migrations VALUES(88,'2021_08_05_111647_create_achievements_table',1);
INSERT INTO migrations VALUES(89,'2021_08_05_134704_create_user_achievements_table',1);
INSERT INTO migrations VALUES(90,'2021_08_13_093647_create_game_session_questions_table',1);
INSERT INTO migrations VALUES(91,'2021_08_13_093744_create_notifications_table',1);
INSERT INTO migrations VALUES(92,'2021_08_23_141650_alter_challenges_table',1);
INSERT INTO migrations VALUES(93,'2021_09_04_084824_create_category_rankings_table',1);
INSERT INTO migrations VALUES(94,'2021_09_15_172718_add_challenge_id_to_questions_table',1);
INSERT INTO migrations VALUES(95,'2021_09_15_201008_add_game_session_id_to_challenges_table',1);
INSERT INTO migrations VALUES(96,'2021_09_16_121218_add_columns_to_notifications_table',1);
INSERT INTO migrations VALUES(97,'2021_09_17_100206_create_online_timelines_table',1);
INSERT INTO migrations VALUES(98,'2021_09_17_145120_add_icon_column_to_game_types_table',1);
INSERT INTO migrations VALUES(99,'2021_09_21_191358_add_user_index_status_to_users_table',1);
INSERT INTO migrations VALUES(100,'2021_09_21_211437_add_user_won_column_to_game_sessions_table',1);
INSERT INTO migrations VALUES(101,'2021_09_22_074102_add_primary_colors_to_game_types_table',1);
INSERT INTO migrations VALUES(102,'2021_09_28_114240_modify_online_timelines_table',1);
